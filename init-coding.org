#+TITLE: Coding
#+AUTHOR: Daniel Newman
#+EMAIL: dwnewman78@gmail.com
#+SETUPFILE: ~/deos/setupfiles/emacs.setup

| *Author* | {{{author}}} ({{{email}}})    |
| *Date*   | {{{time(%Y-%m-%d %H:%M:%S)}}} |

#+BEGIN_SRC emacs-lisp
(provide 'init-coding)
#+END_SRC

* Introduction
Some coding related helpers

* Flycheck
#+BEGIN_SRC emacs-lisp
(use-package flycheck
  :ensure t
  :diminish flycheck-mode
  :config
  (add-hook 'prog-mode-hook 'flycheck-mode)
  (setq-default flycheck-disabled-checker 'javascript-jshint)
  (setq-default flycheck-disabled-checker 'json-jsonlist)
  (setq-default flycheck-disabled-checker 'javascript-eslint)
  (setq-default flycheck-javascript-eslint-executable "eslint-project-relative")
  (flycheck-add-mode 'javascript-eslint 'web-mode)

  (defun my/use-eslint-from-node-modules ()
    (let* ((root (locate-dominating-file
                  (or (buffer-file-name) default-directory)
                  "node_modules"))
           (eslint (and root
                        (expand-file-name "node_modules/eslint/bin/eslint.js"
                                          root))))
      (when (and eslint (file-executable-p eslint))
        (setq-local flycheck-javascript-eslint-executable eslint))))
  (add-hook 'flycheck-mode-hook #'my/use-eslint-from-node-modules)
  ;;; (with-eval-after-load 'flycheck
  ;;; (advice-add 'flycheck-eslint-config-exists-p :override (lambda() t)))
  )
#+END_SRC

* Paredit
This helps with keeping track of your parenthesys
#+BEGIN_SRC emacs-lisp
(use-package paredit
  :ensure t
  :diminish paredit-mode "()"
  :config
  (add-hook 'prog-mode-hook 'paredit-mode))
#+END_SRC

* Groovy
#+BEGIN_SRC emacs-lisp
(use-package groovy-mode
  :ensure t)
#+END_SRC

* Electric Pairs
#+BEGIN_SRC emacs-lisp
(electric-pair-mode 1)
#+END_SRC
