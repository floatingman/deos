#+TITLE: Javascript
#+AUTHOR: Daniel Newman
#+EMAIL: dwnewman78@gmail.com
#+SETUPFILE: ~/deos/setupfiles/emacs.setup

| *Author* | {{{author}}} ({{{email}}})    |
| *Date*   | {{{time(%Y-%m-%d %H:%M:%S)}}} |

* Introduction
Here be the javascript config
#+BEGIN_SRC emacs-lisp
(provide 'init-javascript)
#+END_SRC

#+BEGIN_SRC emacs-lisp
(use-package json-mode
  :ensure t)
#+END_SRC

#+BEGIN_SRC emacs-lisp
(use-package npm-mode
  :ensure t)
#+END_SRC

#+BEGIN_SRC emacs-lisp
(use-package rjsx-mode
  :ensure t
  :config
  (evil-leader/set-key-for-mode 'rjsx-mode
    "mf" 'tide-jump-to-definition
    "mb" 'tide-jump-back)
  (setq js2-basic-offset 2)
  (define-key evil-insert-state-map (kbd "C-d") nil)
  (add-to-list 'auto-mode-alist '("\\.js\\'" . rjsx-mode)))
#+END_SRC

#+BEGIN_SRC emacs-lisp
(use-package web-mode
  :ensure t
  :config
  (defun my-web-mode-hook ()
    "Hooks for Web mode. Adjust indents"
    (setq web-mode-markup-indent-offset 2)
    (setq web-mode-attr-indent-offset 2)
    (setq web-mode-css-indent-offset 2)
    (setq web-mode-code-indent-offset 2)
    (setq css-indent-offset 2))
  (add-hook 'web-mode-hook 'my-web-mode-hook))
#+END_SRC

#+BEGIN_SRC emacs-lisp
(use-package tide
  :ensure t
  :config
  (defun setup-tide-mode ()
    (interactive)
    (tide-setup)
    (flycheck-mode +1)
    (setq flycheck-check-syntax-automatically '(save mode-enabled))
    (eldoc-mode +1)
    (tide-hl-identifier-mode +1)
    (tide-setup)
    (tide-hl-identifier-mode +1))
  (add-hook 'js2-mode-hook #'setup-tide-mode))
#+END_SRC
